(load "../tellorflex-setup.repl")

(env-data {})
(env-sigs [])
(env-data {
  "reporter1-keyset": { "keys": [ "reporter1-public-key" ], "pred": "keys-all" }})
(env-sigs [
  {"key": "reporter1-keyset", "caps": [(coin.TRANSFER "reporter1-keyset" "tellorflex" 300.0)]},
  {"key": "reporter1-public-key", "caps": []}])

(begin-tx "Staked multiple times, disputed but keeps reporting")
(free.tellorflex.deposit-stake "reporter1-keyset" (describe-keyset "free.reporter1-keyset") (free.h.precision 300))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (base64-encode (free.h.priceConversion 100.0)) 0 (base64-encode "{SpotPrice: [eth,usd]}")  "reporter1-keyset")
(expect "1" 1 (free.tellorflex.get-new-value-count-by-query-id (hash (base64-encode "{SpotPrice: [eth,usd]}"))))
(expect "100" (base64-encode (free.h.priceConversion 100.0))
  (free.tellorflex.retrieve-data (hash (base64-encode "{SpotPrice: [eth,usd]}")) (free.h.blockTime)))
; expect failure
(expect-failure "not granted: (free.governance.PRIVATE)"
  (free.tellorflex.remove-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (free.h.blockTime)))
(test-capability (free.governance-mock.PRIVATE))
(free.tellorflex.remove-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (free.h.blockTime))
(free.tellorflex.slash-reporter "reporter1-keyset" "reporter2-keyset")
(commit-tx)
(begin-tx)
(env-chain-data {'block-time: (free.h.advanceTime (/ (/ 86400 2) 3))})
; expect failure
(expect-failure "still in reporter lock"
  (free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (base64-encode (free.h.priceConversion 100.0)) 0 (base64-encode "{SpotPrice: [eth,usd]}")  "reporter1-keyset"))
(env-chain-data {'block-time: (free.h.advanceTime (/ (/ 86400 2) 3))})
(expect "should still have money staked" (free.h.precision 200)
  (at 'staked-balance (free.tellorflex.get-staker-info "reporter1-keyset")))
