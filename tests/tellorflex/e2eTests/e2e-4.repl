(load "../tellorflex-setup.repl")
(env-data {})
(env-sigs [])
(env-data {
  "reporter1-keyset": { "keys": [ "reporter1-public-key" ], "pred": "keys-all" },
  "reporter2-keyset": { "keys": [ "reporter2-public-key" ], "pred": "keys-all" } })
(env-sigs [
  {"key": "reporter1-keyset", "caps": [(coin.TRANSFER "reporter1-keyset" "tellorflex" 100.0)]},
  {"key": "reporter2-keyset", "caps": [(coin.TRANSFER "reporter2-keyset" "tellorflex" 100.0)]},
  {"key": "reporter1-public-key", "caps": []},
  {"key": "reporter2-public-key", "caps": []}])
(env-chain-data {'block-time: (time "1970-01-02T00:00:00Z")})
(begin-tx "TBR should not be removed when depositStake w/ lockedBalance")

(free.tellorflex.deposit-stake "reporter1-keyset" (describe-keyset "free.reporter1-keyset") (* 100 (^ 10 18)))
(free.tellorflex.deposit-stake "reporter2-keyset" (describe-keyset "free.reporter2-keyset") (* 100 (^ 10 18)))
(free.tellorflex.request-staking-withdraw "reporter1-keyset" (* 100 (^ 10 18)))
(commit-tx)
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (base64-encode "100") 0 (base64-encode "{SpotPrice: [eth,usd]}")  "reporter2-keyset")
(expect "Balance: 200.0" 200.0 (coin.get-balance "tellorflex"))
(test-capability (coin.COINBASE))
(test-capability (free.tellorflex.PRIVATE))
(coin.coinbase "tellorflex" (free.tellorflex.create-flex-guard) 100.0)
(expect "to withdraw amount should be 100*e18" (* 100 (^ 10 18)) (free.tellorflex.to-withdraw))
(free.tellorflex.deposit-stake "reporter1-keyset" (describe-keyset "free.reporter1-keyset") (* 100 (^ 10 18)))
; advance time
(env-chain-data {'block-time: (time "1970-01-02T12:00:01Z")})
(expect "to withdraw amount should be go down" 0 (free.tellorflex.to-withdraw))
(expect "Balance: 300.0" 300.0 (coin.get-balance "tellorflex"))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [eth,usd]}")) (base64-encode "100") 0 (base64-encode "{SpotPrice: [eth,usd]}")  "reporter2-keyset")
(expect-that "Balance should be less than 300.0" (> 300.0 )(coin.get-balance "tellorflex"))
