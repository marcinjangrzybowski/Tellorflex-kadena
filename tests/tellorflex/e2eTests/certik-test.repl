(load "../../governance/governance-setup.repl" )
(print "***********************************************")
(print "Test: Deposit a negative amount")
(begin-tx)
(namespace (read-msg "ns"))
(use tellorflex)
(tellorflex.deposit-stake
    "reporter-1"
    (describe-keyset "free.reporter-1")
    (* 100 (^ 10 18)))
(tellorflex.deposit-stake
    "reporter2-keyset"
    (describe-keyset "free.reporter2-keyset")
    (* 1 (^ 10 18)))
(expect "Balance of reporter 1 is 900" 900.0 (f-TRB.get-balance "reporter-1"))
(expect "Balance of reporter 2 is 999" 999.0 (f-TRB.get-balance "reporter2-keyset"))
(expect "Balance of tellorflex  is 101" 101.0 (f-TRB.get-balance "tellorflex"))
(expect "Staked balance for reporter 2 is equal to 1"
        (* 1 (^ 10 18)) (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Staked balance for reporter 1 is equal to 100"
        (* 100 (^ 10 18)) (at 'staked-balance (tellorflex.get-staker-info "reporter-1")))
(tellorflex.request-staking-withdraw
   "reporter2-keyset"
   (* 1 (^ 10 18)))
(expect "Staked balance for reporter 2 is equal to 0"
        0 (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Locked balance for reporter 2 is equal to 1"
        (* 1 (^ 10 18)) (at 'locked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect-failure "can't deposit amount less than 0" (tellorflex.deposit-stake
    "reporter2-keyset"
    (describe-keyset "free.reporter2-keyset") (* -100 (^ 10 18))))
(expect "Staked balance for reporter 2 is equal to 0"
        0 (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Locked balance for reporter 2 is equal to 1"
    (* 1 (^ 10 18)) (at 'locked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(env-chain-data {'block-time: (h.advanceTime 604801)})
(tellorflex.withdraw-stake "reporter2-keyset")
(expect "Balance of reporter 2 is 1000" 1000.0 (f-TRB.get-balance "reporter2-keyset"))
(expect "Balance of tellorflex  is 0, the contract has been drained" 100.0 (f-TRB.get-balance "tellorflex"))
(rollback-tx)
;  *******************************************************************
(print "***********************************************")
(print "Function test: get-data-before failure")
(begin-tx)
(namespace (read-msg "ns"))
(use tellorflex) (use governance)
(deposit-stake
        "reporter-1"
        (describe-keyset (+ (read-msg "ns") ".reporter-1"))
        (h.precision 10))
(submit-value
        (hash (base64-encode "{SpotPrice: [eth,usd]}"))
        (base64-encode (h.priceConversion 100.0)) 0
        (base64-encode "{SpotPrice: [eth,usd]}")  "reporter-1")
(begin-dispute "reporter2-keyset"
        (hash (base64-encode "{SpotPrice: [eth,usd]}"))
        (h.blockTime))
(expect "The dispute has begun" true
        (is-in-dispute
        (hash (base64-encode "{SpotPrice: [eth,usd]}"))
        (h.blockTime)))
(expect "Shouldn't not fail if only value is disputed" 0
        (at "timestamp"
        (tellorflex.get-data-before
        (hash (base64-encode "{SpotPrice: [eth,usd]}")) (+ 1 (h.blockTime)))))
(rollback-tx)