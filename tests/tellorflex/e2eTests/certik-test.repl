(load "../tellorflex-setup.repl" )
(begin-tx)
(print "***********************************************")
(print "Test: Deposit a negative amount")
(namespace (read-msg "ns"))
(tellorflex.deposit-stake
    "reporter-1"
    (describe-keyset "free.reporter-1")
    (* 100 (^ 10 18)))
(tellorflex.deposit-stake
    "reporter2-keyset"
    (describe-keyset "free.reporter2-keyset")
    (* 1 (^ 10 18)))
(expect "Balance of reporter 1 is 900" 900.0 (f-TRB.get-balance "reporter-1"))
(expect "Balance of reporter 2 is 999" 999.0 (f-TRB.get-balance "reporter2-keyset"))
(expect "Balance of tellorflex  is 101" 101.0 (f-TRB.get-balance "tellorflex"))
(expect "Staked balance for reporter 2 is equal to 1"
        (* 1 (^ 10 18)) (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Staked balance for reporter 1 is equal to 100"
        (* 100 (^ 10 18)) (at 'staked-balance (tellorflex.get-staker-info "reporter-1")))
(tellorflex.request-staking-withdraw
   "reporter2-keyset"
   (* 1 (^ 10 18)))
(expect "Staked balance for reporter 2 is equal to 0"
        0 (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Locked balance for reporter 2 is equal to 1"
        (* 1 (^ 10 18)) (at 'locked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect-failure "can't deposit amount less than 0" (tellorflex.deposit-stake
    "reporter2-keyset"
    (describe-keyset "free.reporter2-keyset") (* -100 (^ 10 18))))
(expect "Staked balance for reporter 2 is equal to 0"
        0 (at 'staked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(expect "Locked balance for reporter 2 is equal to 1"
    (* 1 (^ 10 18)) (at 'locked-balance (tellorflex.get-staker-info "reporter2-keyset")))
(env-chain-data {'block-time: (h.advanceTime 604801)})
(tellorflex.withdraw-stake "reporter2-keyset")
(expect "Balance of reporter 2 is 1000" 1000.0 (f-TRB.get-balance "reporter2-keyset"))
(expect "Balance of tellorflex  is 0, the contract has been drained" 100.0 (f-TRB.get-balance "tellorflex"))
(commit-tx)