(load "tellorflex-setup.repl")
(env-data {})
(env-sigs [])
(env-data {
  "reporter1-keyset": { "keys": [ "reporter1-public-key" ], "pred": "keys-all" },
  "reporter2-keyset": { "keys": [ "reporter2-public-key" ], "pred": "keys-all" } })
(env-sigs [
  {"key": "reporter2-keyset", "caps": [(coin.TRANSFER "reporter2-keyset" "tellorflex" 1000.0), (coin.TRANSFER "reporter2-keyset" "reporter1-keyset" 800.0)]},
  {"key": "reporter2-public-key", "caps": []}])
(begin-tx "check stake amount given lower and upper bounds on TRB price")
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(free.tellorflex.deposit-stake "reporter2-keyset" (describe-keyset "free.reporter2-keyset") (free.helpers.precision 1000))
(free.tellorflex.update-stake-amount)
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [trb,usd]}")) (base64-encode (free.helpers.priceConversion 1000001.0)) 0 (base64-encode "{SpotPrice: [trb,usd]}")  "reporter2-keyset")
(env-chain-data {'block-time: (free.helpers.advanceTime 43201)})
(expect-failure "invalid token price"  (free.tellorflex.update-stake-amount))
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [trb,usd]}")) (base64-encode (free.helpers.priceConversion 0.009)) 0 (base64-encode "{SpotPrice: [trb,usd]}")  "reporter2-keyset")
(env-chain-data {'block-time: (free.helpers.advanceTime (/ 86400 2))})
(expect-failure "invalid token price"  (free.tellorflex.update-stake-amount))
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(env-chain-data {'block-time: (free.helpers.advanceTime (/ 86400 2))})
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [trb,usd]}")) (base64-encode (free.helpers.trbPrice 7)) 0 (base64-encode "{SpotPrice: [trb,usd]}")  "reporter2-keyset")
(env-chain-data {'block-time: (free.helpers.advanceTime (+ 1 (/ 86400 2)))})
(free.tellorflex.update-stake-amount)
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [trb,usd]}")) (base64-encode (free.helpers.priceConversion 999999.0)) 0 (base64-encode "{SpotPrice: [trb,usd]}")  "reporter2-keyset")
(env-chain-data {'block-time: (free.helpers.advanceTime 43201)})
(free.tellorflex.update-stake-amount)
(let ((stake-amount (free.tellorflex.stake-amount))
      (minimum-stake-amount (free.tellorflex.minimum-stake-amount)))
    (expect "stake amount should be minimum stake amount 100" minimum-stake-amount stake-amount))
(free.tellorflex.submit-value (hash (base64-encode "{SpotPrice: [trb,usd]}")) (base64-encode (free.helpers.priceConversion 0.01)) 0 (base64-encode "{SpotPrice: [trb,usd]}")  "reporter2-keyset")
(env-chain-data {'block-time: (free.helpers.advanceTime (/ 86400 1.9))})
(free.tellorflex.update-stake-amount)
(let ((stake-amount (free.tellorflex.stake-amount))
      (expected-stake-amount
        (/
          (* (^ 10 18)(free.tellorflex.precision 500.0))
          (free.tellorflex.precision 0.01))))
    (expect "stake amount should be minimum stake amount 50000" expected-stake-amount stake-amount))
