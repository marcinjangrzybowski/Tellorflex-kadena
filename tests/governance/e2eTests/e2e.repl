(load "../governance-setup.repl")

(env-sigs [])
(env-data {})
(env-data {
  "reporter1-keyset": { "keys": [ "reporter1-public-key" ], "pred": "keys-all" },
  "reporter2-keyset": { "keys": [ "reporter2-public-key" ], "pred": "keys-all" } })
(env-sigs [
  {"key": "reporter1-keyset", "caps": [(coin.TRANSFER "reporter1-keyset" "tellorflex" 300.0)]},
  {"key": "reporter2-keyset", "caps": [(coin.TRANSFER "reporter2-keyset" "tellorflex" 100.0),(coin.TRANSFER "reporter2-keyset" "governance" 100.0)]},
  {"key": "reporter1-public-key", "caps": []},
  {"key": "reporter2-public-key", "caps": []}])

(begin-tx "Test query id value after a dispute")
(free.tellorflex.deposit-stake
  "reporter1-keyset"
  (describe-keyset "free.reporter1-keyset")
  (free.h.precision 10))

(expect-failure "there should be no previous value"
  (free.tellorflex.get-current-value
    (hash (base64-encode "{SpotPrice: [eth,usd]}"))))

(free.tellorflex.submit-value
  (hash (base64-encode "{SpotPrice: [eth,usd]}"))
  (base64-encode (free.h.priceConversion 200.0)) 0
  (base64-encode "{SpotPrice: [eth,usd]}")  "reporter1-keyset")

(expect "200.0"
{ 'value: (base64-encode (free.h.priceConversion 200.0))
, 'timestamp: (free.h.blockTime)}
  (free.tellorflex.get-current-value
    (hash (base64-encode "{SpotPrice: [eth,usd]}"))))
; advance time
(env-chain-data {'block-time: (free.h.advanceTime 43201)})

(expect-failure "Dispute must be started within reporting lock time"
  (free.governance.begin-dispute
    "reporter2-keyset"
    (hash (base64-encode "{SpotPrice: [eth,usd]}"))
    (- (free.h.blockTime) 43201)))

(free.tellorflex.submit-value
  (hash (base64-encode "{SpotPrice: [eth,usd]}"))
  (base64-encode (free.h.priceConversion 100.0)) 0
  (base64-encode "{SpotPrice: [eth,usd]}")  "reporter1-keyset")

(expect "100.0"
{ 'value: (base64-encode (free.h.priceConversion 100.0))
, 'timestamp: (free.h.blockTime)}
  (free.tellorflex.get-current-value
    (hash (base64-encode "{SpotPrice: [eth,usd]}"))))

(free.governance.begin-dispute
  "reporter2-keyset"
  (hash (base64-encode "{SpotPrice: [eth,usd]}"))
  (free.h.blockTime))
(free.tellorflex.get-current-value
  (hash (base64-encode "{SpotPrice: [eth,usd]}")))
(expect "Current value shouldn't be dispute value"
  { 'value: (base64-encode (free.h.priceConversion 200.0))
  , 'timestamp: (- (free.h.blockTime) 43201)}
    (free.tellorflex.get-current-value
      (hash (base64-encode "{SpotPrice: [eth,usd]}"))))
(rollback-tx)
(begin-tx "Cannot vote on dispute id 0")
(expect-failure "row not found: 0"
  (free.governance.vote 0 true false "reporter1-keyset"))
; deposit stake in tellorflex
(free.tellorflex.deposit-stake
  "reporter1-keyset"
  (describe-keyset "free.reporter1-keyset")
  (free.h.precision 100))
; submit value in tellorflex
(free.tellorflex.submit-value
  (hash (base64-encode "{SpotPrice: [eth,usd]}"))
  (base64-encode (free.h.priceConversion 100.0)) 0
  (base64-encode "{SpotPrice: [eth,usd]}")  "reporter1-keyset")
(free.governance.begin-dispute
  "reporter2-keyset"
  (hash (base64-encode "{SpotPrice: [eth,usd]}"))
  (free.h.blockTime))
(commit-tx)
(begin-tx)
(expect-failure "row not found: 0"
  (free.governance.vote 0 true false "reporter2-keyset"))
(free.governance.vote 1 true false "reporter2-keyset")
